<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>门店作战指挥中心</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', 'Microsoft YaHei', Arial, sans-serif;
        }
        
        body {
            background-color: #0a0e17;
            color: #e0e0e0;
            overflow: hidden;
            height: 100vh;
        }
        
        .dashboard {
            display: flex;
            flex-direction: column;
            height: 100vh;
            padding: 15px;
            gap: 15px;
        }
        
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 25px;
            background: linear-gradient(135deg, #151d2e 0%, #1a2438 100%);
            border-radius: 10px;
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.4);
            border: 1px solid #2a3a5c;
        }
        
        .logo {
            display: flex;
            align-items: center;
            gap: 12px;
            font-size: 26px;
            font-weight: bold;
            color: #4dabf7;
        }
        
        .logo i {
            font-size: 28px;
        }
        
        .controls {
            display: flex;
            gap: 20px;
            align-items: center;
        }
        
        .screen-mode, .content-selector {
            display: flex;
            gap: 12px;
            align-items: center;
            background-color: #1e2a44;
            padding: 8px 15px;
            border-radius: 8px;
        }
        
        .btn {
            padding: 8px 16px;
            background-color: #2a3a5c;
            border: none;
            border-radius: 6px;
            color: #e0e0e0;
            cursor: pointer;
            transition: all 0.3s;
            font-weight: 500;
        }
        
        .btn:hover {
            background-color: #3a4a7c;
            transform: translateY(-2px);
        }
        
        .btn.active {
            background: linear-gradient(135deg, #4dabf7 0%, #228be6 100%);
            color: #fff;
            box-shadow: 0 4px 10px rgba(77, 171, 247, 0.3);
        }
        
        select {
            padding: 8px 15px;
            background-color: #2a3a5c;
            border: 1px solid #3a4a7c;
            border-radius: 6px;
            color: #e0e0e0;
            cursor: pointer;
            min-width: 180px;
        }
        
        .main-display {
            flex: 1;
            display: grid;
            gap: 15px;
            transition: all 0.4s ease;
        }
        
        /* 分屏模式样式 */
        .mode-2 {
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr;
        }
        
        .mode-4 {
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr 1fr;
        }
        
        .mode-8 {
            grid-template-columns: 1fr 1fr 1fr 1fr;
            grid-template-rows: 1fr 1fr;
        }
        
        .screen {
            background: linear-gradient(145deg, #151d2e 0%, #1a2438 100%);
            border-radius: 10px;
            padding: 15px;
            display: flex;
            flex-direction: column;
            overflow: hidden;
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);
            transition: all 0.3s;
            border: 1px solid #2a3a5c;
            position: relative;
        }
        
        .screen.active {
            border-color: #4dabf7;
            box-shadow: 0 0 0 2px rgba(77, 171, 247, 0.3), 0 6px 15px rgba(0, 0, 0, 0.3);
        }
        
        .screen-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #2a3a5c;
        }
        
        .screen-title {
            font-size: 18px;
            font-weight: bold;
            color: #4dabf7;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .screen-title i {
            font-size: 16px;
        }
        
        .screen-controls {
            display: flex;
            gap: 10px;
        }
        
        .screen-controls button {
            background: none;
            border: none;
            color: #adb5bd;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.2s;
        }
        
        .screen-controls button:hover {
            color: #4dabf7;
        }
        
        .screen-content {
            flex: 1;
            display: flex;
            flex-direction: column;
            overflow: auto;
            padding: 5px;
        }
        
        /* 收入报告样式 - 列表形式 */
        .revenue-report {
            height: 100%;
            display: flex;
            flex-direction: column;
        }
        
        .revenue-list {
            flex: 1;
            overflow-y: auto;
        }
        
        .revenue-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px 10px;
            border-bottom: 1px solid #2a3a5c;
            transition: all 0.2s;
            cursor: pointer;
            border-radius: 6px;
            margin-bottom: 5px;
        }
        
        .revenue-item:hover {
            background-color: #1e2a44;
            transform: translateX(5px);
        }
        
        .store-info {
            display: flex;
            align-items: center;
            gap: 12px;
        }
        
        .store-avatar {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background: linear-gradient(135deg, #4dabf7 0%, #228be6 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 16px;
            font-weight: bold;
        }
        
        .store-name {
            font-weight: 500;
        }
        
        .revenue {
            font-weight: bold;
            color: #4dabf7;
        }
        
        .revenue-summary {
            display: flex;
            justify-content: space-around;
            margin-top: 15px;
            padding: 10px;
            background-color: #1e2a44;
            border-radius: 8px;
        }
        
        .summary-item {
            text-align: center;
        }
        
        .summary-value {
            font-size: 20px;
            font-weight: bold;
            color: #4dabf7;
        }
        
        .summary-label {
            font-size: 12px;
            color: #adb5bd;
        }
        
        /* 排行榜样式 */
        .ranking {
            height: 100%;
            display: flex;
            flex-direction: column;
        }
        
        .ranking-list {
            flex: 1;
            overflow-y: auto;
        }
        
        .ranking-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px 10px;
            border-bottom: 1px solid #2a3a5c;
            transition: all 0.2s;
            cursor: pointer;
            border-radius: 6px;
            margin-bottom: 5px;
        }
        
        .ranking-item:hover {
            background-color: #1e2a44;
            transform: translateX(5px);
        }
        
        .rank-info {
            display: flex;
            align-items: center;
            gap: 12px;
        }
        
        .rank {
            width: 28px;
            height: 28px;
            border-radius: 50%;
            background-color: #2a3a5c;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 14px;
        }
        
        .rank-1 {
            background: linear-gradient(135deg, #ffd43b 0%, #f59f00 100%);
            color: #0a0e17;
        }
        
        .rank-2 {
            background: linear-gradient(135deg, #adb5bd 0%, #868e96 100%);
        }
        
        .rank-3 {
            background: linear-gradient(135deg, #d08c4a 0%, #b56c1e 100%);
        }
        
        /* 九宫格样式 */
        .store-grid {
            height: 100%;
            display: flex;
            flex-direction: column;
        }
        
        .grid-container {
            flex: 1;
            display: grid;
            grid-template-columns: 1fr 1fr 1fr;
            grid-template-rows: 1fr 1fr 1fr;
            gap: 10px;
        }
        
        .grid-item {
            background: linear-gradient(135deg, #1e2a44 0%, #25304a 100%);
            border-radius: 8px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            transition: all 0.3s;
            cursor: pointer;
            border: 1px solid #2a3a5c;
            padding: 15px;
        }
        
        .grid-item:hover {
            transform: translateY(-5px);
            border-color: #4dabf7;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }
        
        .grid-icon {
            font-size: 24px;
            margin-bottom: 8px;
            color: #4dabf7;
        }
        
        .grid-label {
            font-size: 12px;
            color: #adb5bd;
            text-align: center;
        }
        
        /* 一店一策样式 */
        .store-strategy {
            height: 100%;
            display: flex;
            flex-direction: column;
        }
        
        .strategy-content {
            flex: 1;
            display: flex;
            flex-direction: column;
            gap: 12px;
            overflow-y: auto;
        }
        
        .strategy-item {
            background: linear-gradient(135deg, #1e2a44 0%, #25304a 100%);
            border-radius: 8px;
            padding: 15px;
            border: 1px solid #2a3a5c;
        }
        
        .strategy-title {
            font-weight: bold;
            margin-bottom: 8px;
            color: #4dabf7;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        /* 全屏模式样式 */
        .fullscreen-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(10, 14, 23, 0.95);
            z-index: 1000;
            display: none;
            flex-direction: column;
            padding: 20px;
        }
        
        .fullscreen-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 25px;
            background: linear-gradient(135deg, #151d2e 0%, #1a2438 100%);
            border-radius: 10px;
            margin-bottom: 20px;
        }
        
        .fullscreen-content {
            flex: 1;
            background: linear-gradient(145deg, #151d2e 0%, #1a2438 100%);
            border-radius: 10px;
            padding: 20px;
            overflow: auto;
        }
        
        .close-fullscreen {
            background: none;
            border: none;
            color: #adb5bd;
            cursor: pointer;
            font-size: 24px;
            transition: all 0.2s;
        }
        
        .close-fullscreen:hover {
            color: #4dabf7;
        }
        
        /* 响应式设计 */
        @media (max-width: 1200px) {
            .mode-8 {
                grid-template-columns: 1fr 1fr;
                grid-template-rows: 1fr 1fr 1fr 1fr;
            }
        }
        
        @media (max-width: 768px) {
            .header {
                flex-direction: column;
                gap: 15px;
            }
            
            .controls {
                flex-direction: column;
                width: 100%;
            }
            
            .screen-mode, .content-selector {
                justify-content: center;
            }
            
            .mode-4, .mode-8 {
                grid-template-columns: 1fr;
            }
            
            .grid-container {
                grid-template-columns: 1fr 1fr;
                grid-template-rows: 1fr 1fr 1fr 1fr;
            }
        }
        
        /* 滚动条样式 */
        ::-webkit-scrollbar {
            width: 8px;
        }
        
        ::-webkit-scrollbar-track {
            background: #1a2438;
            border-radius: 4px;
        }
        
        ::-webkit-scrollbar-thumb {
            background: #4dabf7;
            border-radius: 4px;
        }
        
        ::-webkit-scrollbar-thumb:hover {
            background: #228be6;
        }
    </style>
</head>
<body>
    <div class="dashboard">
        <div class="header">
            <div class="logo">
                <i class="fas fa-satellite-dish"></i>
                <span>门店作战指挥中心</span>
            </div>
            <div class="controls">
                <div class="screen-mode">
                    <span>分屏模式:</span>
                    <button class="btn" data-mode="2">2格</button>
                    <button class="btn active" data-mode="4">4格</button>
                    <button class="btn" data-mode="8">8格</button>
                </div>
            </div>
        </div>
        
        <div class="main-display mode-4" id="main-display">
            <!-- 屏幕内容将由JavaScript动态生成 -->
        </div>
    </div>
    
    <!-- 全屏显示层 -->
    <div class="fullscreen-overlay" id="fullscreen-overlay">
        <div class="fullscreen-header">
            <div class="logo">
                <i class="fas fa-expand"></i>
                <span id="fullscreen-title">全屏模式</span>
            </div>
            <button class="close-fullscreen" id="close-fullscreen">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="fullscreen-content" id="fullscreen-content">
            <!-- 全屏内容将动态填充 -->
        </div>
    </div>

    <script>
        // 门店数据
        const stores = [
            { id: 1, name: "北京朝阳门店", revenue: 125430, traffic: 542, orders: 128, avgPrice: 98.5, conversion: 23.6 },
            { id: 2, name: "上海浦东门店", revenue: 118760, traffic: 498, orders: 115, avgPrice: 103.2, conversion: 23.1 },
            { id: 3, name: "广州天河门店", revenue: 108540, traffic: 465, orders: 108, avgPrice: 100.5, conversion: 23.2 },
            { id: 4, name: "深圳南山门店", revenue: 105320, traffic: 432, orders: 102, avgPrice: 103.2, conversion: 23.6 },
            { id: 5, name: "成都锦江门店", revenue: 98760, traffic: 398, orders: 95, avgPrice: 104.0, conversion: 23.9 },
            { id: 6, name: "杭州西湖门店", revenue: 95430, traffic: 385, orders: 92, avgPrice: 103.7, conversion: 23.9 },
            { id: 7, name: "武汉武昌门店", revenue: 87650, traffic: 365, orders: 87, avgPrice: 100.8, conversion: 23.8 },
            { id: 8, name: "南京鼓楼门店", revenue: 82340, traffic: 342, orders: 82, avgPrice: 100.4, conversion: 24.0 }
        ];

        // 当前激活的屏幕索引
        let activeScreenIndex = 0;
        
        // 默认内容配置（4格布局）
        const defaultContents = ['revenue', 'ranking', 'grid', 'strategy'];
        
        // 分屏模式切换
        document.querySelectorAll('.screen-mode .btn').forEach(btn => {
            btn.addEventListener('click', function() {
                document.querySelectorAll('.screen-mode .btn').forEach(b => b.classList.remove('active'));
                this.classList.add('active');
                
                const mode = this.getAttribute('data-mode');
                const mainDisplay = document.getElementById('main-display');
                mainDisplay.className = 'main-display mode-' + mode;
                
                generateScreens(mode);
            });
        });
        
        // 生成屏幕内容
        function generateScreens(mode) {
            const screenCount = parseInt(mode);
            const mainDisplay = document.getElementById('main-display');
            
            // 清空现有内容
            mainDisplay.innerHTML = '';
            
            // 生成屏幕
            for (let i = 0; i < screenCount; i++) {
                const screen = document.createElement('div');
                screen.className = i === activeScreenIndex ? 'screen active' : 'screen';
                screen.setAttribute('data-index', i);
                
                // 屏幕标题
                const screenHeader = document.createElement('div');
                screenHeader.className = 'screen-header';
                
                const screenTitle = document.createElement('div');
                screenTitle.className = 'screen-title';
                
                const titleIcon = document.createElement('i');
                screenTitle.appendChild(titleIcon);
                
                const titleText = document.createElement('span');
                screenTitle.appendChild(titleText);
                
                const screenControls = document.createElement('div');
                screenControls.className = 'screen-controls';
                
                const expandBtn = document.createElement('button');
                expandBtn.innerHTML = '<i class="fas fa-expand"></i>';
                expandBtn.title = '全屏查看';
                
                const closeBtn = document.createElement('button');
                closeBtn.innerHTML = '<i class="fas fa-times"></i>';
                closeBtn.title = '关闭屏幕';
                
                const refreshBtn = document.createElement('button');
                refreshBtn.innerHTML = '<i class="fas fa-sync-alt"></i>';
                refreshBtn.title = '刷新内容';
                
                screenControls.appendChild(expandBtn);
                screenControls.appendChild(refreshBtn);
                screenControls.appendChild(closeBtn);
                
                screenHeader.appendChild(screenTitle);
                screenHeader.appendChild(screenControls);
                
                // 屏幕内容
                const screenContent = document.createElement('div');
                screenContent.className = 'screen-content';
                
                screen.appendChild(screenHeader);
                screen.appendChild(screenContent);
                mainDisplay.appendChild(screen);
                
                // 设置初始内容
                const contentType = i < defaultContents.length ? defaultContents[i] : 'revenue';
                setScreenContent(i, contentType);
                
                // 添加屏幕点击事件（激活屏幕）
                screen.addEventListener('click', function(e) {
                    if (e.target === screen || e.target === screenContent) {
                        setActiveScreen(i);
                    }
                });
                
                // 添加关闭按钮事件
                closeBtn.addEventListener('click', function(e) {
                    e.stopPropagation();
                    if (screenCount > 1) {
                        screen.remove();
                        // 重新生成屏幕以保持正确的布局
                        generateScreens(mode);
                    }
                });
                
                // 添加刷新按钮事件
                refreshBtn.addEventListener('click', function(e) {
                    e.stopPropagation();
                    setScreenContent(i, getCurrentScreenType(i));
                });
                
                // 添加全屏按钮事件
                expandBtn.addEventListener('click', function(e) {
                    e.stopPropagation();
                    openFullscreen(i);
                });
            }
        }
        
        // 设置屏幕内容
        function setScreenContent(screenIndex, contentType, storeId = null) {
            const screen = document.querySelectorAll('.screen')[screenIndex];
            const screenTitle = screen.querySelector('.screen-title');
            const titleIcon = screenTitle.querySelector('i');
            const titleText = screenTitle.querySelector('span');
            const screenContent = screen.querySelector('.screen-content');
            
            // 设置图标和标题
            const contentConfig = {
                revenue: { icon: 'fas fa-chart-line', title: '门店收入报告' },
                ranking: { icon: 'fas fa-trophy', title: '门店排行榜' },
                grid: { icon: 'fas fa-th-large', title: '门店九宫格' },
                strategy: { icon: 'fas fa-chess-board', title: '门店一店一策' },
                data: { icon: 'fas fa-chart-bar', title: storeId ? `门店${storeId}数据` : '门店数据' },
                photo: { icon: 'fas fa-camera', title: storeId ? `门店${storeId}照片` : '门店照片' },
                diagnosis: { icon: 'fas fa-stethoscope', title: storeId ? `门店${storeId}诊断` : '门店诊断' },
                video: { icon: 'fas fa-video', title: storeId ? `门店${storeId}视频` : '门店视频' },
                report: { icon: 'fas fa-file-alt', title: storeId ? `门店${storeId}报告` : '门店报告' },
                tools: { icon: 'fas fa-tools', title: '门店工具' }
            };
            
            titleIcon.className = contentConfig[contentType].icon;
            titleText.textContent = contentConfig[contentType].title;
            
            // 设置内容
            screenContent.innerHTML = generateContent(contentType, storeId);
            
            // 保存当前内容类型到屏幕数据属性
            screen.setAttribute('data-content-type', contentType);
            if (storeId) {
                screen.setAttribute('data-store-id', storeId);
            }
        }
        
        // 获取当前屏幕的内容类型
        function getCurrentScreenType(screenIndex) {
            const screen = document.querySelectorAll('.screen')[screenIndex];
            return screen.getAttribute('data-content-type') || 'revenue';
        }
        
        // 设置激活的屏幕
        function setActiveScreen(screenIndex) {
            document.querySelectorAll('.screen').forEach((screen, index) => {
                if (index === screenIndex) {
                    screen.classList.add('active');
                    activeScreenIndex = screenIndex;
                } else {
                    screen.classList.remove('active');
                }
            });
        }
        
        // 打开全屏模式
        function openFullscreen(screenIndex) {
            const screen = document.querySelectorAll('.screen')[screenIndex];
            const screenTitle = screen.querySelector('.screen-title span').textContent;
            const screenContent = screen.querySelector('.screen-content').innerHTML;
            
            document.getElementById('fullscreen-title').textContent = screenTitle;
            document.getElementById('fullscreen-content').innerHTML = screenContent;
            document.getElementById('fullscreen-overlay').style.display = 'flex';
            
            // 重新绑定全屏内容中的事件
            bindFullscreenEvents();
        }
        
        // 绑定全屏内容中的事件
        function bindFullscreenEvents() {
            // 收入报告列表项点击事件
            document.querySelectorAll('#fullscreen-content .revenue-item').forEach(item => {
                item.addEventListener('click', function() {
                    const storeId = parseInt(this.getAttribute('data-store-id'));
                    setScreenContent(activeScreenIndex, 'ranking');
                    closeFullscreen();
                });
            });
            
            // 排行榜项点击事件
            document.querySelectorAll('#fullscreen-content .ranking-item').forEach(item => {
                item.addEventListener('click', function() {
                    const storeId = parseInt(this.getAttribute('data-store-id'));
                    setScreenContent(activeScreenIndex, 'grid', storeId);
                    closeFullscreen();
                });
            });
            
            // 九宫格项点击事件
            document.querySelectorAll('#fullscreen-content .grid-item').forEach(item => {
                item.addEventListener('click', function() {
                    const contentType = this.getAttribute('data-content');
                    const currentScreen = document.querySelector('.screen.active');
                    const storeId = currentScreen.getAttribute('data-store-id');
                    
                    if (storeId) {
                        setScreenContent(activeScreenIndex, contentType, parseInt(storeId));
                    } else {
                        setScreenContent(activeScreenIndex, contentType);
                    }
                    closeFullscreen();
                });
            });
        }
        
        // 关闭全屏模式
        function closeFullscreen() {
            document.getElementById('fullscreen-overlay').style.display = 'none';
        }
        
        // 生成内容
        function generateContent(contentType, storeId = null) {
            const store = storeId ? stores.find(s => s.id === storeId) : stores[0];
            
            switch(contentType) {
                case 'revenue':
                    // 按收入排序
                    const sortedStores = [...stores].sort((a, b) => b.revenue - a.revenue);
                    
                    return `
                        <div class="revenue-report">
                            <div class="revenue-list">
                                ${sortedStores.map(store => `
                                    <div class="revenue-item" data-store-id="${store.id}">
                                        <div class="store-info">
                                            <div class="store-avatar">${store.name.charAt(0)}</div>
                                            <div class="store-name">${store.name}</div>
                                        </div>
                                        <div class="revenue">¥${store.revenue.toLocaleString()}</div>
                                    </div>
                                `).join('')}
                            </div>
                            <div class="revenue-summary">
                                <div class="summary-item">
                                    <div class="summary-value">¥${stores.reduce((sum, store) => sum + store.revenue, 0).toLocaleString()}</div>
                                    <div class="summary-label">总收入</div>
                                </div>
                                <div class="summary-item">
                                    <div class="summary-value">${stores.length}</div>
                                    <div class="summary-label">门店数量</div>
                                </div>
                                <div class="summary-item">
                                    <div class="summary-value">${(stores.reduce((sum, store) => sum + store.avgPrice, 0) / stores.length).toFixed(1)}</div>
                                    <div class="summary-label">平均客单价</div>
                                </div>
                            </div>
                        </div>
                    `;
                    
                case 'ranking':
                    // 按收入排序
                    const rankedStores = [...stores].sort((a, b) => b.revenue - a.revenue);
                    
                    return `
                        <div class="ranking">
                            <div class="ranking-list">
                                ${rankedStores.map((store, index) => `
                                    <div class="ranking-item" data-store-id="${store.id}">
                                        <div class="rank-info">
                                            <div class="rank ${index < 3 ? 'rank-' + (index+1) : ''}">${index+1}</div>
                                            <div class="store-name">${store.name}</div>
                                        </div>
                                        <div class="revenue">¥${store.revenue.toLocaleString()}</div>
                                    </div>
                                `).join('')}
                            </div>
                        </div>
                    `;
                    
                case 'grid':
                    return `
                        <div class="store-grid">
                            <div class="grid-container">
                                <div class="grid-item" data-content="data">
                                    <div class="grid-icon"><i class="fas fa-chart-bar"></i></div>
                                    <div class="grid-label">门店数据</div>
                                </div>
                                <div class="grid-item" data-content="photo">
                                    <div class="grid-icon"><i class="fas fa-camera"></i></div>
                                    <div class="grid-label">门店照片</div>
                                </div>
                                <div class="grid-item" data-content="diagnosis">
                                    <div class="grid-icon"><i class="fas fa-stethoscope"></i></div>
                                    <div class="grid-label">门店诊断</div>
                                </div>
                                <div class="grid-item" data-content="strategy">
                                    <div class="grid-icon"><i class="fas fa-chess-board"></i></div>
                                    <div class="grid-label">一店一策</div>
                                </div>
                                <div class="grid-item" data-content="video">
                                    <div class="grid-icon"><i class="fas fa-video"></i></div>
                                    <div class="grid-label">门店视频</div>
                                </div>
                                <div class="grid-item" data-content="report">
                                    <div class="grid-icon"><i class="fas fa-file-alt"></i></div>
                                    <div class="grid-label">门店报告</div>
                                </div>
                                <div class="grid-item" data-content="tools">
                                    <div class="grid-icon"><i class="fas fa-tools"></i></div>
                                    <div class="grid-label">门店工具</div>
                                </div>
                                <div class="grid-item" data-content="ranking">
                                    <div class="grid-icon"><i class="fas fa-trophy"></i></div>
                                    <div class="grid-label">门店排行</div>
                                </div>
                                <div class="grid-item" data-content="revenue">
                                    <div class="grid-icon"><i class="fas fa-chart-line"></i></div>
                                    <div class="grid-label">收入报告</div>
                                </div>
                            </div>
                        </div>
                    `;
                    
                case 'strategy':
                    return `
                        <div class="store-strategy">
                            <div class="strategy-content">
                                <div class="strategy-item">
                                    <div class="strategy-title"><i class="fas fa-bullhorn"></i>促销策略</div>
                                    <div>针对周末客流量增加，推出限时折扣活动，提升销售额15%</div>
                                </div>
                                <div class="strategy-item">
                                    <div class="strategy-title"><i class="fas fa-users"></i>人员安排</div>
                                    <div>高峰时段增加2名员工，优化服务流程，减少客户等待时间</div>
                                </div>
                                <div class="strategy-item">
                                    <div class="strategy-title"><i class="fas fa-boxes"></i>库存管理</div>
                                    <div>增加热销商品备货，减少滞销商品库存，提升周转率至85%</div>
                                </div>
                                <div class="strategy-item">
                                    <div class="strategy-title"><i class="fas fa-paint-brush"></i>店面优化</div>
                                    <div>重新规划商品陈列，优化店面布局，提升客户体验</div>
                                </div>
                            </div>
                        </div>
                    `;
                    
                case 'data':
                    return `
                        <div class="store-data">
                            <div class="data-header">
                                <div class="store-info">
                                    <div class="store-avatar">${store.name.charAt(0)}</div>
                                    <div>
                                        <div style="font-weight: bold;">${store.name}</div>
                                        <div style="font-size: 12px; color: #adb5bd;">ID: ${store.id}</div>
                                    </div>
                                </div>
                            </div>
                            <div class="data-grid">
                                <div class="data-item">
                                    <div class="data-value">${store.traffic}</div>
                                    <div class="data-label">客流量</div>
                                </div>
                                <div class="data-item">
                                    <div class="data-value">${store.orders}</div>
                                    <div class="data-label">订单数</div>
                                </div>
                                <div class="data-item">
                                    <div class="data-value">¥${store.avgPrice}</div>
                                    <div class="data-label">平均客单价</div>
                                </div>
                                <div class="data-item">
                                    <div class="data-value">${store.conversion}%</div>
                                    <div class="data-label">转化率</div>
                                </div>
                            </div>
                        </div>
                    `;
                    
                default:
                    return `<div>内容加载中...</div>`;
            }
        }
        
        // 事件委托处理内容点击
        document.addEventListener('click', function(e) {
            // 收入报告列表项点击
            if (e.target.closest('.revenue-item')) {
                const revenueItem = e.target.closest('.revenue-item');
                const storeId = parseInt(revenueItem.getAttribute('data-store-id'));
                const nextScreenIndex = (activeScreenIndex + 1) % document.querySelectorAll('.screen').length;
                setScreenContent(nextScreenIndex, 'ranking');
                setActiveScreen(nextScreenIndex);
            }
            
            // 排行榜项点击
            if (e.target.closest('.ranking-item')) {
                const rankingItem = e.target.closest('.ranking-item');
                const storeId = parseInt(rankingItem.getAttribute('data-store-id'));
                const nextScreenIndex = (activeScreenIndex + 1) % document.querySelectorAll('.screen').length;
                setScreenContent(nextScreenIndex, 'grid', storeId);
                setActiveScreen(nextScreenIndex);
            }
            
            // 九宫格项点击
            if (e.target.closest('.grid-item')) {
                const gridItem = e.target.closest('.grid-item');
                const contentType = gridItem.getAttribute('data-content');
                const currentScreen = document.querySelector('.screen.active');
                const storeId = currentScreen.getAttribute('data-store-id');
                
                if (storeId) {
                    setScreenContent(activeScreenIndex, contentType, parseInt(storeId));
                } else {
                    setScreenContent(activeScreenIndex, contentType);
                }
            }
        });
        
        // 关闭全屏事件
        document.getElementById('close-fullscreen').addEventListener('click', closeFullscreen);
        
        // 初始化页面
        window.addEventListener('DOMContentLoaded', function() {
            generateScreens('4');
        });
    </script>
</body>
</html>
